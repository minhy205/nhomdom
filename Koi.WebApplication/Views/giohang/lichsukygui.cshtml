@{
    ViewBag.Title = "Lịch sử ký gửi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Lịch sử Ký gửi</h3>
<table class="cart-table">
    <thead>
        <tr>
            <th>Sản phẩm</th>
            <th>Tuổi</th>
            <th>Giới tính</th>
            <th>Nguồn gốc</th>
            <th>Chuẩn loại</th>
            <th>Tính cách</th>
            <th>Lượng thức ăn/ngày</th>
            <th>Số lượng</th>
            <th>Trạng thái</th>
        </tr>
    </thead>
    <tbody id="historyTableBody">
        <!-- Sản phẩm từ lịch sử ký gửi sẽ được hiển thị ở đây -->
    </tbody>
</table>

<!-- Tóm tắt ký gửi -->
<div class="cart-summary">
    <div class="summary-title">Tóm tắt ký gửi</div>
    <div class="summary-item">
        <span>Tổng số lượng cá ký gửi: </span>
        <span id="offlineQuantity">0</span> <!-- Tổng số lượng cá ký gửi offline -->
    </div>
    <div class="summary-item">
        <span>Tổng giá trị ký gửi:</span>
        <span id="totalValue">0</span> <!-- Tổng giá trị ký gửi -->
    </div>
</div>

<script>
    // Hàm lấy lịch sử ký gửi từ localStorage
    function getHistory() {
        const history = localStorage.getItem('history');
        return history ? JSON.parse(history) : [];
    }

    // Hàm cập nhật bảng hiển thị lịch sử ký gửi
    function updateHistoryTable() {
        const history = getHistory();
        const historyTableBody = document.getElementById('historyTableBody');
        let offlineQuantity = 0; // Khởi tạo biến số lượng cá offline
        let totalValue = 0;      // Khởi tạo biến tổng giá trị ký gửi

        // Xóa nội dung bảng trước khi cập nhật
        historyTableBody.innerHTML = '';

        history.forEach(item => {
            const row = historyTableBody.insertRow();
            row.innerHTML = `
                <td><img src="${item.imageUrl}" alt="${item.productName}" style="width: 50px; height: 50px;"><div>${item.productName}</div></td>
                <td>${item.age}</td>
                <td>${item.gender}</td>
                <td>${item.origin}</td>
                <td>${item.type}</td>
                <td>${item.characteristics}</td>
                <td>${item.feeding}</td>
                <td>${item.quantity}</td>
                <td>${item.status}</td>
            `;
            // Cập nhật số lượng cá offline và tính tổng giá trị ký gửi
            if (item.status.toLowerCase() === "offline") {
                offlineQuantity += item.quantity;
                totalValue += item.price * item.quantity; // Giả sử có thuộc tính 'price' trong item
            }
        });

        // Cập nhật số lượng cá offline và tổng giá trị ký gửi vào phần tóm tắt
        updateCartSummary(offlineQuantity, totalValue);
    }

    // Hàm cập nhật tóm tắt ký gửi
    function updateCartSummary(offlineQuantity, totalValue) {
        document.getElementById('offlineQuantity').textContent = offlineQuantity;
        document.getElementById('totalValue').textContent = totalValue.toFixed(2); // Hiển thị giá trị với 2 chữ số thập phân
    }

    // Tự động cập nhật lịch sử khi trang được tải
    window.onload = function () {
        updateHistoryTable();
    };
</script>
