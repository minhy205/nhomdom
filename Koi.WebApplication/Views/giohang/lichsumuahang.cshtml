@model IEnumerable<Koi.WebApplication.Models.licsumuahang>

@{
    ViewBag.Title = "Lịch sử mua hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Giỏ hàng -->
<h3>Giỏ hàng của tôi</h3>
<table id="cartTable">
    <thead>
        <tr>
            <th>Sản phẩm</th>   
            <th>Giá</th>
            <th>Số lượng</th>
            <th>Trạng thái</th>
        </tr>
    </thead>
    <tbody>
        <!-- Sản phẩm sẽ được hiển thị ở đây -->
    </tbody>
</table>

<!-- Tóm tắt giỏ hàng -->
<div class="cart-summary">
    <div class="summary-title">Tóm tắt giỏ hàng</div>
    <div class="summary-item">
        <span>Tổng số lượng cá trong giỏ:</span>
        <span id="totalQuantity">0</span>
    </div>
    <div class="summary-item">
        <span>Tổng giá trị giỏ hàng:</span>
        <span id="totalPrice">0 đ</span>
    </div>
</div>

<script>
    // Lấy giỏ hàng từ localStorage
    function getCart() {
        const cart = localStorage.getItem('cart');
        return cart ? JSON.parse(cart) : [];
    }

    // Lưu giỏ hàng vào localStorage
    function saveCart(cart) {
        localStorage.setItem('cart', JSON.stringify(cart));
    }

//     // Cập nhật bảng giỏ hàng và tóm tắt giỏ hàng
//     function updateCartTable() {
//         const cart = getCart();  // Lấy giỏ hàng từ localStorage
//         const cartTable = document.getElementById('cartTable').getElementsByTagName('tbody')[0];
//         const offlineQuantityElement = document.getElementById('offlineQuantity');
//         const onlineQuantityElement = document.getElementById('onlineQuantity');
//         const totalPriceElement = document.getElementById('totalPrice');
//         const totalQuantityElement = document.getElementById('totalQuantity');

//         // Làm sạch bảng giỏ hàng hiện tại
//         cartTable.innerHTML = '';

//         let totalPrice = 0;
//         let offlineQuantity = 0;
//         let onlineQuantity = 0;

//         cart.forEach(item => {
//             const row = cartTable.insertRow();
//             row.innerHTML = `
//                 <td>
//                     <img src="${item.imageUrl}" alt="${item.productName}" style="width: 50px; height: 50px;">
//                     <div>${item.productName}</div>
//                 </td>
//                 <td>${item.price.toLocaleString()} đ</td>
//                 <td>${item.quantity}</td>
//                 <td>${item.status}</td>
//             `;
//             totalPrice += item.price * item.quantity;

//             // Cập nhật số lượng cá offline và online
//             if (item.status.toLowerCase() === "offline") {
//                 offlineQuantity += item.quantity;
//             } else if (item.status.toLowerCase() === "online") {
//                 onlineQuantity += item.quantity;
//             }
//         });

//         // Cập nhật giá trị tổng và số lượng
//         offlineQuantityElement.textContent = offlineQuantity;
//         onlineQuantityElement.textContent = onlineQuantity;
//         totalQuantityElement.textContent = (offlineQuantity + onlineQuantity);
//         totalPriceElement.textContent = totalPrice.toLocaleString() + ' đ';
//     }

//     // Cập nhật giỏ hàng khi tải trang
//     window.onload = function() {
//         updateCartTable();
//     };
// 
function updateCartTable() {
    const cart = getCart();  // Lấy giỏ hàng từ localStorage
    const cartTable = document.getElementById('cartTable').getElementsByTagName('tbody')[0];
    const totalPriceElement = document.getElementById('totalPrice');
    const totalQuantityElement = document.getElementById('totalQuantity');

    // Làm sạch bảng giỏ hàng hiện tại
    cartTable.innerHTML = '';

    let totalPrice = 0;
    let totalQuantity = 0;

    cart.forEach(item => {
        const row = cartTable.insertRow();
        row.innerHTML = `
            <td>
                <img src="${item.imageUrl}" alt="${item.productName}" style="width: 50px; height: 50px;">
                <div>${item.productName}</div>
            </td>
            <td>${item.price.toLocaleString()} đ</td>
            <td>${item.quantity}</td>
            <td>${item.status}</td>
        `;
        totalPrice += item.price * item.quantity;
        totalQuantity += item.quantity;
    });

    // Cập nhật giá trị tổng và số lượng
    totalQuantityElement.textContent = totalQuantity;
    totalPriceElement.textContent = totalPrice.toLocaleString() + ' đ';
}
 // Cập nhật giỏ hàng khi tải trang
    window.onload = function() {
        updateCartTable();
    };
</script>